// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  files     File[]
  folders   Folder[]
}

model File {
  id        Int      @id @default(autoincrement())
  name      String
  fileType  String
  filePath  String
  fileSize  Float
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  Folder    Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId  Int
}

model Folder {
  id           Int      @id @default(autoincrement())
  name         String
  files        File[]
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int
  subfolders   Folder[] @relation("Subfolder")
  parentFolder Folder?  @relation("Subfolder", fields: [folderId], references: [id], onDelete: Cascade)
  folderId     Int?

  @@unique([name, userId])
}
